{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCQhBG,EAdF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACNC,EADM,iDAC0CC,UAAUH,GADpD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGSA,EAAKC,OAHd,uBAGLC,EAHK,EAGLA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR9B,kBAWLM,GAXK,4CAAH,sDCEAO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAGtB,CAACpB,IAGIqB,EDbwBI,CAAazB,GAAhCa,EADuB,EAC5BN,KAAaa,EADe,EACfA,QACpB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,mDAAb,qBACZ,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEO1Ce,EAfM,WAAO,IAAD,EACaxC,mBAAS,CAAC,cADvB,mBAChByC,EADgB,KACJ1C,EADI,KAGvB,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK0C,EAAWlB,KAAK,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRvD4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56ce3f2e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cat => [ inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=uI61fqAKt8qtbcTbz9zbdoKYxvg4C4nl`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n};\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","// import React, { useState,useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__bounce animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(img => <GifGridItem key={img.id} {...img}/>)}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(img => {\r\n                setState({\r\n                    data:img,\r\n                    loading:false\r\n                });\r\n            });\r\n    },[category]);\r\n\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    return (\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        <ol>\r\n            {categories.map( category => <GifGrid key={category} category={category}/>)}\r\n        </ol>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}